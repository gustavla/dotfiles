# This does not replace the .zshrc, since it doesn't contain any computer specific settings. Instead, import this from your .zshrc as follows:
#
# source $GIT/dotfiles/dot_zshrc
# 

export VISUAL='nvim'
export EDITOR='nvim'

# Shortcuts
alias grepr='grep --color -r'
alias d='tmux -2 a'
alias tmux='tmux -2'
alias vi='nvim'
alias vim='nvim'

# Set up the prompt

autoload -Uz promptinit
promptinit

setopt histignorealldups sharehistory

# Use emacs keybindings even if our EDITOR is set to vi
bindkey -e

# Keep 1000 lines of history within the shell and save it to ~/.zsh_history:
HISTSIZE=1000
SAVEHIST=1000
HISTFILE=~/.zsh_history

# Use modern completion system
#autoload -Uz compinit
#compinit

autoload zmv

#zstyle ':completion:*' auto-description 'specify: %d'
#zstyle ':completion:*' completer _expand _complete _correct _approximate
#zstyle ':completion:*' format 'Completing %d'
#zstyle ':completion:*' group-name ''
#zstyle ':completion:*' menu select=2
#if [ command -v dircolors >/dev/null 2>&1 ]; then
#    eval "$(dircolors -b)"
#fi
#zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
#zstyle ':completion:*' list-colors ''
#zstyle ':completion:*' list-prompt %SAt %p: Hit TAB for more, or the character to insert%s
#zstyle ':completion:*' matcher-list '' 'm:{a-z}={A-Z}' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=* l:|=*'
#zstyle ':completion:*' menu select=long
#zstyle ':completion:*' select-prompt %SScrolling active: current selection at %p%s
#zstyle ':completion:*' use-compctl false
#zstyle ':completion:*' verbose true
#
#zstyle ':completion:*:*:kill:*:processes' list-colors '=(#b) #([0-9]#)*=0=01;31'
#zstyle ':completion:*:kill:*' command 'ps -u $USER -o pid,%cpu,tty,cputime,cmd'

autoload -U colors && colors

# This prompt will show if any background processes exist. It will also display
# virtualenvs.

precmd() {
    if [ -n "$PROMPT_SHOW_HOST" ]; then
        PS1="%{$fg[green]%}[%.@%m]%{$reset_color%}"
    else
        PS1="%{$fg[green]%}[%.]%{$reset_color%}"
    fi
    if [ -n "$VIRTUAL_ENV" ]; then
        PS1="(`basename $VIRTUAL_ENV`) ${PS1}"
    fi
    if [[ $CONDA_DEFAULT_ENV != "base" ]]; then
        PS1="($CONDA_DEFAULT_ENV) ${PS1}";
    fi;

    if [ $#jobstates -ne 0 ]; then
        PS1="${PS1}(%{$fg[red]%}$#jobstates%{$reset_color%})"
    fi
    PS1="${PS1}$ "
}
#
#
#function virtualenv_prompt_info(){
#  [[ -n ${VIRTUAL_ENV} ]] || return
#  echo "${ZSH_THEME_VIRTUALENV_PREFIX:=(}${VIRTUAL_ENV:t}${ZSH_THEME_VIRTUALENV_SUFFIX:=) }"
#}
#
#ZSH_THEME_GIT_PROMPT_PREFIX=" %{$fg[blue]%}git%{$reset_color%}:%{$fg[red]%}"
#ZSH_THEME_GIT_PROMPT_SUFFIX="%{$reset_color%}"
#ZSH_THEME_GIT_PROMPT_DIRTY="%{$fg[yellow]%}â€¦%{$reset_color%}"
#ZSH_THEME_GIT_PROMPT_CLEAN=""
#
#local prompt_jobs="%(1j.%{$fg[yellow]%}%j%{$reset_color%}%{$fg[red]%}z%{$reset_color%} .)"
#local prompt_host="%{$fg[cyan]%}%m%{$reset_color%}"
#local prompt_root="%(!.%{$fg_bold[red]%}#.%{$fg[green]%}$)%{$reset_color%}"
#
#local return_status="%{$fg[red]%}%(?..=)%{$reset_color%}"
#
#PROMPT='$(virtualenv_prompt_info)${prompt_host}$(git_prompt_info) %~ ${prompt_root} '
#
#RPROMPT="${return_status}%*"

LANG="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"
LC_ALL="en_US.UTF-8"
